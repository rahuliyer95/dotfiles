[user]
  email      = rahuliyer573@gmail.com
  name       = Rahul Iyer
  signingKey = 9BC18269D3C5E1560ADF6F77267B8AAE5144461E

[alias]
  # View abbreviated SHA, description, and history graph of the latest 20 commits
  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  # View the current working tree status using the short format
  s = status -s
  # Switch to a branch
  co = checkout
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v
  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD
  # Credit an author on the latest commit
  credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
  bd = branch -D
  # Interactive rebase with the given number of latest commits (preserves original commit date)
  reb = "!r() { git rebase -i HEAD~$1 --committer-date-is-author-date; }; r"
  # Rebase with origin main
  rom = "!f() { git fetch origin main; git rebase origin/main; }; f"
  # Remove the old tag with this name and tag the latest commit with it.
  retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"
  # Remove branches that have already been merged with master
  # a.k.a. 'delete merged'
  dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d"
  # List contributors with number of commits
  contributors = shortlog --summary --numbered
  whoami = config user.email

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[core]
  # Use custom `.gitignore` and `.gitattributes`
  excludesfile      = ~/.gitignore
  attributesfile    = ~/.gitattributes
  # Treat spaces before tabs and all kinds of trailing whitespace as an error
  # [default] trailing-space: looks for spaces at the end of a line
  # [default] space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace        = space-before-tab,-indent-with-non-tab,trailing-space
  # Make `git rebase` safer on OS X
  # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime        = false
  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
  # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false
  editor            = nvim
  pager             = delta

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
  ui = auto

[color "branch"]
  current = yellow reverse
  local   = yellow
  remote  = green

[color "status"]
  added     = yellow
  changed   = green
  untracked = cyan

[commit]
  # https://help.github.com/articles/signing-commits-using-gpg/
  gpgsign = true

[diff]
  colorMoved = default
  # Detect copies as well as renames
  renames    = true

[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C

[delta]
  decorations  = true
  hyperlinks   = true
  line-numbers = true
  navigate     = true
  side-by-side = true
  syntax-theme = OneDark

[filter "lfs"]
  required = true
  clean    = git-lfs clean -- %f
  smudge   = git-lfs smudge -- %f
  process  = git-lfs filter-process

[init]
  defaultBranch = main

[help]
  # Automatically correct and execute mistyped commands
  autocorrect = 1

[http]
  postBuffer = 524288000

[merge]
  conflictstyle = diff3

[pull]
  rebase = true

[push]
  autoSetupRemote = true

[url "git@github.com:"]
  insteadOf = https://github.com/

[url "git@gitlab.com:"]
  insteadOf = https://gitlab.com/

[include]
  path = ~/.gitconfig.local

[include]
  path = ~/Documents/ahmetsait/toolgit/aliases.ini
