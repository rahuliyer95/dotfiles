#!/usrbin/env bash
# vi: foldmethod=marker:ft=sh

# base path
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/opt/X11/bin:/bin:/sbin"

# Snap
[ -d "/snap/bin" ] && export PATH="$PATH:/snap/bin"

# Omarchy
[ -d "$OMARCHY_PATH" ] && export PATH="$PATH:$OMARCHY_PATH/bin"

# Homebridge
[ -d "/opt/homebridge/bin" ] && export PATH="$PATH:/opt/homebridge/bin"

if command -v brew > /dev/null; then
  for prefix in coreutils moreutils binutils; do
    PREFIX="$(brew --prefix $prefix 2> /dev/null)"
    [ -n "$PREFIX" ] && export PATH="$PREFIX/bin:$PATH"
  done
fi

# Java
[ -n "$JAVA_HOME" ] && export PATH="$PATH:$JAVA_HOME/bin"

# local bin
[ -d "$HOME/.local/bin" ] && export PATH="$PATH:$HOME/.local/bin"

# home bin
[ -d "$HOME/.bin" ] && export PATH="$PATH:$HOME/.bin"

# golang
[ -d "$HOME/go/bin" ] && export PATH="$PATH:$HOME/go/bin"

# direnv
if command -v direnv > /dev/null && [ -n "$PS1" ]; then
  eval "$(direnv hook "$SHELL")"
fi

# cargo
# shellcheck source=/dev/null
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

# bun.sh
[ -d "$BUN_INSTALL" ] && export PATH="$BUN_INSTALL/bin:$PATH"

# pnpm
[ -d "$PNPM_HOME" ] && export PATH="$PATH:$PNPM_HOME"

# toolgit
[ -d "$HOME/Documents/ahmetsait/toolgit" ] && export PATH="$PATH:$HOME/Documents/ahmetsait/toolgit"

# fzf
# shellcheck source=/dev/null
command -v fzf > /dev/null && source <(fzf "--$(basename "$SHELL")" 2> /dev/null)

# zoxide
command -v zoxide > /dev/null && eval "$(zoxide init "$(basename "$SHELL")")"

# mason.nvim resources
[ -d "${XDG_DATA_HOME:-$HOME}/.local/share/nvim/mason/bin" ] \
  && export PATH="$PATH:${XDG_DATA_HOME:-$HOME}/.local/share/nvim/mason/bin"
